input: "frames"
input_shape {
  dim: 32
  dim: 4
  dim: 84
  dim: 84
}
input: "target"
input_shape {
  dim: 32
  dim: 6
}

input: "filter"
input_shape {
  dim: 32
  dim: 6
}

layers {
  name: "conv1_layer"
  type: CONVOLUTION
  bottom: "frames"
  top: "conv1"
  convolution_param {
    num_output: 16
    kernel_size: 8
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layers {
  name: "conv1_relu_layer"
  type: RELU
  bottom: "conv1"
  top: "conv1"
  relu_param {
    negative_slope: 0.01
  }
}
layers {
  name: "conv2_layer"
  type: CONVOLUTION
  bottom: "conv1"
  top: "conv2"
  convolution_param {
    num_output: 32
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layers {
  name: "conv2_relu_layer"
  type: RELU
  bottom: "conv2"
  top: "conv2"
  relu_param {
    negative_slope: 0.01
  }
}
layers {
  name: "ip1_layer"
  type: INNER_PRODUCT
  bottom: "conv2"
  top: "ip1"
  inner_product_param {
    num_output: 256
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layers {
  name: "ip1_relu_layer"
  type: RELU
  bottom: "ip1"
  top: "ip1"
  relu_param {
    negative_slope: 0.01
  }
}
layers {
  name: "ip2_layer"
  type: INNER_PRODUCT
  bottom: "ip1"
  top: "q_values"
  inner_product_param {
    num_output: 6
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layers {
  name: "eltwise_layer"
  type: ELTWISE
  bottom: "q_values"
  bottom: "filter"
  top: "filtered_q_values"
  eltwise_param {
    operation: PROD
  }
}
layers {
  name: "loss"
  type: EUCLIDEAN_LOSS
  bottom: "filtered_q_values"
  bottom: "target"
  top: "loss"
}